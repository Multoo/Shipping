<?php

namespace Multoo\Shipping\Provider;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-20 at 11:42:47.
 */
class DhlTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Dhl
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new Dhl;
    }

    protected function tearDown()
    {
        
    }

    /**
     * @covers Multoo\Shipping\Provider\AbstractProvider::build
     * @covers Multoo\Shipping\Provider\Dhl::processOutput
     * @covers Multoo\Shipping\Provider\Dhl::processDepartureShipment
     * @covers Multoo\Shipping\Provider\Dhl::processReturnShipment
     * @covers Multoo\Shipping\Provider\Dhl::referencesToOneLine
     */
    public function testBuild()
    {
        $actual = $this->object->build(new \DhlBatchFixture);

        $expected = <<<'EOD'
Shipper ID;Shipper Account;Shipper Company Name;Shipper Contact Name;Shipper Address 1;Shipper City Name;Shipper Zip;ISO Country;Shipper IATA;Shipper Phone;Receiver Company Name;Receiver Attention;Receiver Address 1;Receiver Zip code;Receiver City;Receiver ISO;Receiver Phone;Shipper Reference;Product Code;Pieces;Total Weight;Always Send Email;Mail Adres;Incoterms
12345678;12345678;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;AMS;0529484004;Scheep BV;Jan Jansen;Street 1A;Somewhere;1234AS;NL;0529485005;p0-ref1, p0-ref2, p0-ref3, p0-ref4, p0-ref5;A;1;1;1;Jan@Scheep.bv;CPT
12345678;12345678;Scheep BV;Jan Jansen;Street 1A;Somewhere;1234AS;NL;AMS;0529485005;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;0529484004;p0-ref1, p0-ref2, p0-ref3, p0-ref4, p0-ref5;A;1;1;1;bas@pintip.nl;CPT
12345678;12345678;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;AMS;0529484004;Test BV;Henk Tester;Road 732-32;Overthere;1252HG;NL;0529485007;;A;1;1;0;;CPT
12345678;12345678;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;AMS;0529484004;Test BV;Henk Tester;Road 732-32;Overthere;1252HG;NL;0529485007;;A;1;1;0;;CPT
12345678;12345678;Heb-ik-jouw-daar BV;Jop Jansen;Straat 19B;Dontknow;9874KO;NL;AMS;0529485006;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;0529484004;p0-ref1, p0-ref2, p0-ref3, p0-ref4, p0-ref5;A;1;1;0;;CPT
12345678;12345678;Heb-ik-jouw-daar BV;Jop Jansen;Straat 19B;Dontknow;9874KO;NL;AMS;0529485006;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;0529484004;p2-ref1, p2-ref2;A;1;2;0;;CPT
12345678;12345678;Heb-ik-jouw-daar BV;Jop Jansen;Straat 19B;Dontknow;9874KO;NL;AMS;0529485006;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;0529484004;p3-ref1, p3-ref2, p3-ref3, p3-ref4;A;1;5;0;;CPT
12345678;12345678;Heb-ik-jouw-daar BV;Jop Jansen;Straat 19B;Dontknow;9874KO;NL;AMS;0529485006;Test BV;Alex Damen;Westerveen 3A;Nieuwleusen;7711DA;NL;0529484004;;A;1;3;0;;CPT

EOD;

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers Multoo\Shipping\Provider\AbstractProvider::build
     * @covers Multoo\Shipping\Provider\Dhl::processDepartureShipment
     * @covers Multoo\Shipping\Provider\Dhl::processReturnShipment
     * @expectedException \Exception
     * @expectedExceptionMessage Only one departure notifications allowed with shipping provider DHL
     */
    public function testBuildMultiDepartureNotificationsException()
    {
        $DhlBatchFixture = new \DhlBatchFixture();
        $DhlBatchFixture->getShipment(0)
            ->addDepartureNotification((new \Multoo\Shipping\Notification));
        $this->object->build($DhlBatchFixture);
    }

    /**
     * @covers Multoo\Shipping\Provider\AbstractProvider::build
     * @covers Multoo\Shipping\Provider\Dhl::processDepartureShipment
     * @covers Multoo\Shipping\Provider\Dhl::processReturnShipment
     * @expectedException \Exception
     * @expectedExceptionMessage Only one return notifications allowed with shipping provider DHL
     */
    public function testBuildMultiReturnNotificationsException()
    {
        $DhlBatchFixture = new \DhlBatchFixture();
        $DhlBatchFixture->getShipment(0)
            ->addReturnNotification((new \Multoo\Shipping\Notification));
        $this->object->build($DhlBatchFixture);
    }

    /**
     * @covers Multoo\Shipping\Provider\AbstractProvider::build
     * @covers Multoo\Shipping\Provider\Dhl::processDepartureShipment
     * @covers Multoo\Shipping\Provider\Dhl::processReturnShipment
     * @expectedException \Exception
     * @expectedExceptionMessage Only notification 'labelCreation' is allowed with shipping provider DHL
     */
    public function testBuildDepartureNotificationWrongTypeException()
    {
        $DhlBatchFixture = new \DhlBatchFixture();
        $DhlBatchFixture->getShipment(1)
            ->addDepartureNotification((new \Multoo\Shipping\Notification)
                ->setCompanyOrName('Test BV')
                ->setContactName('Jan Jansen')
                ->setEmail('jan@test.bv')
                ->setException(true)
        );

        $this->object->build($DhlBatchFixture);
    }

    /**
     * @covers Multoo\Shipping\Provider\AbstractProvider::build
     * @covers Multoo\Shipping\Provider\Dhl::processDepartureShipment
     * @covers Multoo\Shipping\Provider\Dhl::processReturnShipment
     * @expectedException \Exception
     * @expectedExceptionMessage Only notification 'labelCreation' is allowed with shipping provider DHL
     */
    public function testBuildReturnNotificationWrongTypeException()
    {
        $DhlBatchFixture = new \DhlBatchFixture();
        $DhlBatchFixture->getShipment(2)
            ->addReturnNotification((new \Multoo\Shipping\Notification)
                ->setCompanyOrName('Test BV')
                ->setContactName('Jan Jansen')
                ->setEmail('jan@test.bv')
                ->setShipOrReturn(true)
        );

        $this->object->build($DhlBatchFixture);
    }
}
