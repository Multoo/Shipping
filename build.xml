<?xml version="1.0" encoding="UTF-8"?>
<project name="Shipping" default="build" basedir=".">
    <target name="build"
            depends="prepare,composer,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit"/> 

    <target name="build-parallel"
            depends="prepare,composer,lint,tools-parallel,phpunit"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="build/coverage"/>
        <delete dir="build/logs"/>
        <delete dir="build/pdepend"/>
        <delete>
            <fileset dir="vendor">
                <include name="*/**" />
                <include name="*" />
            </fileset>
        </delete>
        <delete file="composer.lock"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="build/coverage"/>
        <mkdir dir="build/logs"/>
        <mkdir dir="build/pdepend"/>
    </target>
    
    <target name="composer" description="Install dependencies  with composer">
        <exec executable="composer" passthru="true" checkreturn="true">
            <arg value="install" />
        </exec>
    </target>


    <target name="lint" description="Perform syntax check of sourcecode files">
        <phplint haltonfailure="true" deprecatedAsError="true">
            <fileset dir="./">
                <include name="**/*.php" />
                <exclude name="build/**" />
                <exclude name="vendor/**" />
            </fileset>
        </phplint>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc" passthru="true">
            <arg value="--count-tests" />
            <arg value="--log-csv" />
            <arg value="build/logs/phploc.csv" />
            <arg value="--exclude"/>
            <arg value="build" />
            <arg value="--exclude"/>
            <arg value="vendor" />
            <arg path="./" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <phpdepend>
            <fileset dir="./">
                <include name="**/*.php" />
                <exclude name="build/**" />
                <exclude name="vendor/**" />
                <exclude name="test/**" />
            </fileset>
            <logger type="jdepend-xml" outfile="build/logs/jdepend.xml"/>
            <logger type="jdepend-chart" outfile="build/pdepend/dependencies.svg"/>
            <logger type="overview-pyramid" outfile="build/pdepend/overview-pyramid.svg"/>
        </phpdepend>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd" passthru="true">
            <arg path="./" />
            <arg value="text" />
            <arg value="build/phpmd.xml" />
            <arg value="--suffixes" />
            <arg value="php" />
            <arg value="--exclude"/>
            <arg value="build,vendor,test" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd" passthru="true">
            <arg path="./" />
            <arg value="xml" />
            <arg value="build/phpmd.xml" />
            <arg value="--suffixes" />
            <arg value="php" />
            <arg value="--reportfile" />
            <arg value="build/logs/pmd.xml" />
            <arg value="--exclude"/>
            <arg value="build,vendor,test" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs" passthru="true">
            <arg value="--extensions=php" />
            <arg value="--standard=build/phpcs.xml" />
            <arg value="--ignore=build/*,vendor/*,test/*"/>
            <arg path="./" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" passthru="true">
            <arg value="--extensions=php" />
            <arg value="--report=checkstyle" />
            <arg value="--report-file=build/logs/checkstyle.xml" />
            <arg value="--standard=build/phpcs.xml" />
            <arg value="--ignore=build/*,vendor/*,test/*"/>
            <arg path="./" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd" passthru="true">
            <arg value="--log-pmd" />
            <arg value="build/logs/pmd-cpd.xml" />
            <arg value="--exclude"/>
            <arg value="build" />
            <arg value="--exclude"/>
            <arg value="vendor" />
            <arg value="--exclude"/>
            <arg value="test" />
            <arg path="./" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" passthru="true">
            <arg value="--configuration=build\phpunit.xml" />
        </exec>
    </target>

</project>